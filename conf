#!/bin/bash
echo -e "\e[1;104;37m Iniciando o script...! \e[0m"
sleep 4
clear
#Cria a funÃ§Ã£o da logo
function logo_spwn {
if [ -e "/usr/bin/toilet" ]; then
		toilet -f mono9 -F metal "VPS-CONF" && tput smul; echo -e "\e[1;34mVersÃ£o: 1.3 \e[0m" ; tput rmul
		fig=1
else
	apt-get install toilet -y > /dev/null 2>&1
	if [ -e "/usr/bin/toilet" ];
        then
        logo_spwn
	else
		echo "VPS-Conf!"
		sleep 3
    fi
fi
if [ "$first" = '1' ]; then
    inst_shell
fi
}
#Cria a funÃ§Ã£o de abrir o menu de opÃ§Ãµes, que analisa primeiro se o script jÃ¡ foi instalado
function menu_spwn {
if [ -e "/bin/menu" ]; then
	echo -e "\e[1;104;37m _________________________________________________________________ \e[0m"
    echo -e "\e[1;104;37m |Foi detectada uma instalaÃ§Ã£o antiga. Abrindo menu de opÃ§Ãµes... | \e[0m"
    echo -e "\e[1;104;37m Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯ \e[0m"
	txt_1="Reinstalar"
	place_blank=""
	txt_2="Instalar"
	place_blank2=""
    sleep 3
    clear
else
	txt_1="Instalar"
	place_blank="  "
	place_blank2="  "
fi
	logo_spwn
	echo ""
    echo -e "\e[1;104;37m _________________________________________________________ \e[0m"
    echo -e "\e[1;104;37m |1. $txt_1 script;   $place_blank                               | \e[0m"
    echo -e "\e[1;104;37m |2. $txt_1 scripts shell e squid;  $place_blank2                 | \e[0m"
    echo -e "\e[1;104;37m |3. Instalar BadVPN-UDPGW (UDP para OpenSSH/Dropbear);  | \e[0m"
    echo -e "\e[1;104;37m |4. $txt_1 e configurar Dropbear;     $place_blank              | \e[0m"
	echo -e "\e[1;104;37m |5. Instalar e configurar GetTunnel (Doador);           | \e[0m"
	echo -e "\e[1;104;37m |6. Instalar e configurar SocksV5 (Custom Proxy);       | \e[0m"
	echo -e "\e[1;104;37m |7. Instalar SSL Tunnel;                                | \e[0m"
	echo -e "\e[1;104;37m |8. Instalar OpenVPN (preconfigurado);                  | \e[0m"
    echo -e "\e[1;104;37m |9. Desinstalar script;                                 | \e[0m"
    echo -e "\e[1;104;37m |0. Sair.                                               | \e[0m"
	echo -e "\e[1;104;37m |00. InformaÃ§Ãµes sobre script;                           | \e[0m"
    echo -e "\e[1;104;37m Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯ \e[0m"
    read -p "Selecione uma opÃ§Ã£o: " -e -i 1 menu_opc
        case $menu_opc in
        1)  first=1
            inst_shell
            ;;
        2)  inst_shell
            ;;
        3)  inst_udpgw
            ;;
        4)  inst_dropbr
            ;;
		5) 	inst_gett
			;;
		6) 	inst_socks
			;;
		7)	inst_ssl
			;;
		8)	inst_ovpn
			;;
        9)  wget http://kanprojects.zapto.org/vpsmanager/desinstalador.sh
            bash desinstalador.sh 3
            rm vpsconf.sh
            bye_spwn
            ;;
        0)  bye_spwn
            ;;
		00)	faq_spwn
			;;
        *) 	clear
			tput setaf 1 ; tput setab 3 ; echo "Insira uma opÃ§Ã£o vÃ¡lida (1-9, 0 ou 00)" ; tput sgr0
            menu_spwn
            ;;
        esac 
}
#Baixa partes necessÃ¡rias para o script funcionar
function inst_shell {
apt-get install wget -y > /dev/null 2>&1 #Instala o wget, caso o mesmo nÃ£o esteja instalado
rm /bin/speedtest /bin/velocidade > /dev/null 2>&1 #Remove binÃ¡rias antigas (VPS-CONF 0.9)
wget http://kanprojects.zapto.org/vpsmanager/conf/conf.sh > /dev/null 2>&1
cd /usr/lib/
wget http://kanprojects.zapto.org/vpsmanager/conf/speedpy.tar.gz > /dev/null 2>&1
tar -xzf speedpy.tar.gz
rm speedpy.tar.gz #Remove arquivo orfÃ£o
cd /root/
ln -s /usr/lib/speedpy/speedtest /bin/speedtest #Symlink para transformar em executÃ¡vel do sistema
ln -s /usr/lib/speedpy/speedtest /bin/velocidade #Outro Symlink com a mesma finalidade
#Linhas a seguir irÃ£o corrigir as permissÃµes para que seja possÃ­vel executar as partes do script
chmod 777 conf.sh
chmod 777 /bin/speedtest
#Inicia a instalaÃ§Ã£o dos shell scripts
tput setab 4 ; echo "Atualizando pacotes antes de prosseguir a instalaÃ§Ã£o..."
echo "Isso pode levar alguns minutos..."
echo "Caso necessite de confirmaÃ§Ã£o, aperte Enter. Isso significa que..."
echo "...Que alguns pacotes estÃ£o quebrados no seu servidor e isso irÃ¡..."
echo "...IrÃ¡ atrapalhar a instalaÃ§Ã£o." ; tput sgr0
sleep 3
apt-get install -f
apt-get update && apt-get dist-upgrade -y > /dev/null 2>&1
clear
echo -e "\e[1;104;37m Terminado! Iniciando a instalaÃ§Ã£o. \e[0m"
sleep 3
bash conf.sh -i
echo -e "\e[1;104;37m Continuando... \e[0m"
if [ "$first" = '1' ]; then
    inst_udpgw
else
    clear
    echo "Completado. Voltando ao menu..."
    sleep 5
    menu_spwn
fi
}
#Cria a funÃ§Ã£o para instalaÃ§Ã£o do BADVPN -- UDPGW
function inst_udpgw {
#Verifica se o BadVPN jÃ¡ foi instalado
if [ -e "/bin/badudp" ]; then
	echo "BadVPN jÃ¡ instalado."
else
	tput setab 4 ; tput setaf 7 ; echo "Deseja instalar o UDP agora? (S/n): " ; tput sgr0
	read -p "Resposta: " -e -i S inst_udp
	case $inst_udp in
        [sS])   wget http://kanprojects.zapto.org/vpsmanager/conf/badvpnconf.sh > /dev/null 2>&1
                chmod 777 badvpnconf.sh 
                ./badvpnconf.sh
                sleep 3
            #AtivaÃ§Ã£o de inÃ­cio automÃ¡tico para badudpgw
            tput setab 4 ; tput setaf 7 ; echo "Deseja ativar o inÃ­cio automÃ¡tico do BadUDP no servidor? (S/n): " ; tput sgr0
			read -p "Resposta: " -e -i S init_udp
                case $init_udp in
                            [sS]) 
                                wget http://kanprojects.zapto.org/vpsmanager/badvpn/badudp -O /etc/init.d/badudp
                                chmod 777 /etc/init.d/badudp
                                update-rc.d badudp enable > /dev/null 2>&1
                                echo "Configurado!"
                                echo "O UDP agora rodarÃ¡ automaticamente no boot."
                                ;;
                            [nN]) /bin/dudp > /dev/null 2>&1
                                echo "O UDP |NÃƒO| rodarÃ¡ automaticamente no boot."
                                ;;
                        esac
                ;;
		[nN])   echo "BadUDP nÃ£o instalado."
                echo "Prosseguindo com a instalaÃ§Ã£o..."
                ;;
    esac
fi
if [ "$first" = '1' ]; then
    inst_end
else
	sleep 3
    clear
    echo "Completado. Voltando ao menu..."
    sleep 1
    menu_spwn
fi
}
#Cria a funÃ§Ã£o para instalaÃ§Ã£o do dropbear
function inst_dropbr {
sleep 3
clear
echo -e "\e[1;104;37m __________________________________________________________________________ \e[0m"
echo -e "\e[1;104;37m |Iniciando a instalaÃ§Ã£o do Dropbear.                                     | \e[0m"
echo -e "\e[1;104;37m |Se ela jÃ¡ estiver instalada, o script irÃ¡ tentar atualizÃ¡-la.           | \e[0m"
echo -e "\e[1;104;37m |Caso nÃ£o hajam atualizaÃ§Ãµes, nÃ£o acontecerÃ¡ nada e o script prosseguirÃ¡.| \e[0m"
echo -e "\e[1;104;37m Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯Â¯ \e[0m"
echo " "
read -p "Digite a porta que deseja que o dropbear execute(PadrÃ£o 80): " PORTADR
inst_dropbr2
if [ "$first" = '1' ]; then
    inst_end
else
    clear
    echo "Completado. Voltando ao menu..."
    sleep 5
    menu_spwn
fi
}
function inst_dropbr2 {
	wget http://kanprojects.zapto.org/vpsmanager/conf/conf.sh > /dev/null 2>&1
	chmod +x conf.sh
	bash conf.sh -id
	rm conf.sh > /dev/null 2>&1 
	apt-get install dropbear -y
	grep -v "^NO_START=1" /etc/default/dropbear > /tmp/drop1
	grep -v "^DROPBEAR_PORT=22" /tmp/drop1 > /tmp/drop2
	grep -v "^DROPBEAR_BANNER" /tmp/drop2 > /tmp/drop3
	if [ "$PORTADR" = '80' ]; then
		chk_sqd
		if [ "$squidfs" = 'NS' ]; then
			echo "Squid nÃ£o instalado. Pulando a remoÃ§Ã£o de porta."
			PORTADR=80
		else
			grep -v "http_port 80" $squidfs/squid.conf > /tmp/sqdp
			mv /tmp/sqdp $squidfs/squid.conf
		fi
	else
		grep -v "^Port 443" /etc/ssh/sshd_config > /tmp/sshd
		mv /tmp/sshd /etc/ssh/sshd_config
		PORTADR=443
	fi
	echo "NO_START=0
DROPBEAR_PORT=$PORTADR
DROPBEAR_BANNER=/etc/banner" >> /tmp/drop3
	mv /tmp/drop3 /etc/default/dropbear
	service dropbear start
	wget http://kanprojects.zapto.org/vpsmanager/scripts/criarusuario2drop.sh -O /bin/criarusuario
}
#Cria a funÃ§Ã£o para instalaÃ§Ã£o do GetTunnel
function inst_gett {
tput setaf 4; tput setab 7; echo "Insira a chave de doador! Caso nÃ£o tenha uma, entre em contato com o Kandiesky no Telegram. " ; tput sgr0
echo ""
tput smul ; read -p "Chave: " ; tput rmul
wget https://kanprojects.zapto.org/vpsconf/doador/$chavedoador/servercore.elf
if [ -e "servercore.elf" ]; then
chmod +x servercore.elf
./servercore.elf
	if [ -e "/bin/systemctl" ]; then 
		systemctl enable 96initsr
		systemctl start 96initsr
	else
		update-rc.d 96initsr defaults
	fi
else
	echo "Chave digitada incorreta. Por favor, tente novamente."
	inst_gett
fi
}
function inst_socks {
wget http://kanprojects.zapto.org/vpsmanager/conf/soc.elf
chmod +x soc.elf
./soc.elf
if [ -e "/bin/systemctl" ]; then 
		systemctl enable 97initsr
		systemctl start 97initsr
	else
		update-rc.d 97initsr defaults
	fi
}
function inst_ssl {
tput setaf 1 ; tput setab 3 ; echo "[ Iniciando instalaÃ§Ã£o do SSLTunnel ]" ; tput sgr0
		sleep 4
		echo " " 
		echo " "
		tput setaf 1 ; tput setab 3
		echo "Ã‰ preciso tirar algumas portas para que seja possÃ­vel usar o SSLTunnel."
		echo "VocÃª concorda com a remoÃ§Ã£o do uso da porta 443 de alguns programas?"
		echo "(SerÃ£o removidas apenas as portas das configuraÃ§Ãµes de: OpenSSH e Dropbear, caso tenham)"
		echo "(Os programas em si nÃ£o serÃ£o removidos, e serÃ£o configurados para executarem em outra porta automaticamente pelo script)" ; tput sgr0
		read -p "Concorda? (S ou N) " ssl_qst
		case $ssl_qst in
			[Ss])	if [ -e "/etc/default/dropbear" ]; then
						grep -v "Port 443" /etc/default/dropbear > /tmp/drop1
						mv /tmp/drop1 /etc/default/dropbear
						echo "Port 1043" >> /etc/default/dropbear
						echo "Adicionada porta 1043 ao Dropbear e removida 443"
					fi
					if [ -e "/etc/ssh/sshd_config" ]; then
						grep -v "Port 443" /etc/ssh/sshd_config > /tmp/ssh1
						mv /tmp/ssh1 /etc/ssh/sshd_config
						echo "Port 22" >> /etc/ssh/sshd_config
						echo "Adicionada porta 22 ao OpenSSH (Desconsidere cajo jÃ¡ tivesse)"
					fi
					wget https://kanprojects.zapto.org/vpsmanager/conf/stunnel.conf -O stunnel.conf
					wget https://kanprojects.zapto.org/vpsmanager/conf/stunnel4 -O stunnel4
					wget https://kanprojects.zapto.org/vpsmanager/conf/stunnel.sh -O stunnel.sh
					wget https://kanprojects.zapto.org/vpsmanager/conf/initsrStun -O /etc/init.d/69stunnel
					chmod +x /etc/init.d/69stunnel
					bash stunnel.sh
					rm stunnel*
					if [ -e "/bin/systemctl" ]; then
						systemctl enable 69stunnel
					else
						update.rc-d 69stunnel defaults
					fi
					tput setaf 1 ; tput setab 3 ; echo "[ Finalizado! Voltando ao menu principal... ]" ; tput sgr0
					sleep 4
				;;
			[Nn])	echo "Voltando ao menu inicial entÃ£o..."
					sleep 4
					menu_spwn
				;;
		esac
}
function inst_ovpn {
tput setaf 1 ; tput setab 3 ; echo "[ Iniciando instalaÃ§Ã£o do OpenVPN... ]" ; tput sgr0
sleep 4
wget http://kanprojects.zapto.org/vpsmanager/conf/openvivoPWD.sh -O openvivoPWD.sh
bash openvivoPWD.sh
tput setaf 1 ; tput setab 3 ; echo "[ Finalizado! Voltando ao menu principal... ]" ; tput sgr0
sleep 4
}
function faq_spwn { 
clear
echo "VocÃª tem as seguintes opÃ§Ãµes do script instaladas:"
if [ -e "/bin/menu" ]; then
echo -e "\e[1;104;37mâ—Menu - Script base \e[0m"
fi
if [ -e "/etc/default/dropbear" ]; then
echo -e "\e[1;104;37mâ—Dropbear \e[0m"
fi
if [ -e "/bin/badudp" ]; then
echo -e "\e[1;104;37mâ—BadVPN-UDPGW \e[0m"
fi
if [ -e "/usr/lib/squid/" ]; then
echo -e "\e[1;104;37m Squid(3) \e[0m"
fi
if [ -e "/etc/openvpn" ]; then
echo -e "\e[1;104;37mâ—OpenVPN \e[0m"
fi
if [ -e "/usr/lib/greenview" ]; then
echo -e "\e[1;104;37mâ—GetTunnel (Obrigado!) \e[0m"
fi
if [ -e "/usr/lib/socksv6" ]; then
echo -e "\e[1;104;37mâ—SocksV6 \e[0m"
fi
if [ -e "/etc/stunnel" ]; then
echo -e "\e[1;104;37mâ—SSLTunnel \e[0m"
fi

sleep 3
menu_spwn
}
function hconf {
mkdir /etc/hconf > /dev/null 2>&1
wget https://kanprojects.zapto.org/vpsconf/updates/versao.inf -O /etc/hconf/versao.inf > /dev/null 2>&1
wget https://kanprojects.zapto.org/vpsconf/modulos/autoupdate.sh -O /etc/hconf/autoupdate > /dev/null 2>&1
chmod +x /etc/hconf/autoupdate
crontab -l > hconf > /dev/null 2>&1
grep -v "00 12 * * * bash /etc/hconf/autoupdate" hconf > hconf2
echo "00 12 * * * bash /etc/hconf/autoupdate" >> hconf2
crontab hconf2 > /dev/null 2>&1
rm hconf hconf2 > /dev/null 2>&1
tput setaf 0; tput setab 7; echo "Por Ãºltimo..." ; tput sgr0
tput setaf 4; tput setab 7; echo "VocÃª deseja ativar as atualizaÃ§Ãµes automÃ¡ticas do Script? (S/n) " ; tput sgr0
echo " "
read -p "Resposta: " qst_att
case "$qst_att" in
	[Ss])	echo "Update = 1" > /etc/hconf/config
			tput setaf 0; tput setab 7; echo "AtualizaÃ§Ãµes automÃ¡ticas ativadas com sucesso!" ; tput sgr0
			sleep 3
			clear
		;;
	[Nn])	echo "Update = 0" > /etc/hconf/config
		;;
	*) 
		echo "Resposta invÃ¡lida. Tente novamente."
		hconf
		;;
esac
}
function inst_end {
rm badvpnconf.sh conf.sh vpsconf.sh > /dev/null 2>&1
apt-get autoremove -y > /dev/null 2>&1
sleep 4
hconf
bye_spwn
}
function bye_spwn {
clear
if [ "$fig" = '1' ]; then
	toilet -f mono9 -F border "Obrigado!"
else
	echo -e "\e[1;104;37m Obrigado! \e[0m"
fi
exit 1
}
############################
#FunÃ§Ãµes usadas pelo painel#
############################
function inst_sqd {
wget https://kanprojects.zapto.org/vpsmanager/conf/conf.sh
chmod +x conf.sh && bash conf.sh 1
}
function inst_shell2 {
wget https://kanprojects.zapto.org/vpsmanager/conf/conf.sh
chmod +x conf.sh && bash conf.sh 2
}
function chk_sqd {
if [ -e "/etc/squid3/squid.conf" ]; then
	squidfs="/etc/squid3"
elif [ -e "/etc/squid/squid.conf" ]; then
	squidfs="/etc/squid"
else
	squidfs="NS"
fi
}
############################
case "$1" in
	21) inst_sqd
		;;
	22) inst_shell2
		;;
	41) inst_dropbr2
		;;
	h|"-h")	echo "Uso:
21 Instalar apenas squid;
22 Instalar apenas shell;
41 Instalar apenas dropbear;
-h Exibir essa mensagem;
Inicie o script sem argumentos para ir ao menu principal."
		;;
    *)  menu_spwn
		;;
esac
